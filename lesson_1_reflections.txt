How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Viewing a diff between two versions of a file helped me see the
bug that was introduced by allowing me to see what the file
looked like before and after the bug ws introduced, allowing
me to track the changes that have occured.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Easy access to the entire history of a file will allow me to
track what I've done to a file or what others have done to a
file, which will allow me to see common mistakes I or others
have made. This will help me learn from mistakes, which will
help prevent me from making them in the future. Additionally,
this will help me become better at comparing different file
versions, which will help me become better at correcting
mistakes in the future.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

I believe the pro is that you can comment on why you made a
specific change and save files at more logical points than
if versions automatically saved. The con, however, is that
you may not remember when you need to make a commit and,
therefore, may end up creating commits less often than
you should be.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

I believe some version control systems, like Git, allow saving
multiple files in one commit because it allows you to keep track
of all changes in a session for all the related files. This
seems easier and more efficient than treating each file
separately.

How can you use the commands git log and git diff to view the history of files?

I use the command git log to view the commit names of every git
and then I can use the command git diff to view the changes that
have occured between two different commits.

How might using version control make you more confident to make changes that
could break something?

Using version control would make me more confident to make
changes that could break something because I would know that
whatever mistake I possibly make is easily discoverable and
reversible.

Now that you have your workspace set up, what do you want to try using Git for?

I'm not sure what I want to try using Git for. I just want to
learn how to use Git so that I can be a better programmer. I'm
hoping that this will help me with a career in tech later.
